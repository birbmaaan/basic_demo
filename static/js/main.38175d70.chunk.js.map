{"version":3,"sources":["appcues_components/ContentTrigger.js","appcues_components/EventLog.js","appcues_components/Toolbar.js","Home.js","About.js","Contact.js","Navigation.js","appcues_components/Identifier.js","Login.js","Settings.js","Appcues.js","App.js","serviceWorker.js","index.js"],"names":["show_flow","flow_id","document","getElementById","flow_id_str","value","window","Appcues","show","ContentTrigger","id","type","onClick","EventLog","on","e","a","events_log","event","createElement","innerHTML","appendChild","console","log","reset_appcues","reset","clear_show","clearShow","anonymous_user","anonymous","Toolbar","Home","About","Contact","href","Navigation","to","identify_user","user_id","identify","AppcuesIdentifier","Login","Settings","AppcuesRouter","location","useLocation","useEffect","page","exact","path","component","App","role","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38175d70.chunk.js","sourcesContent":["import React from 'react';\n\nconst show_flow = () => {\n  const flow_id = document.getElementById(\"show_flow\");\n  const flow_id_str = flow_id.value;\n  window.Appcues.show(flow_id_str);\n  flow_id.value = '';\n}\n\nconst ContentTrigger = () => {\n     return (\n        <div>\n            <h2>Enter flow ID to launch it on this page</h2>\n            <input id=\"show_flow\" type=\"text\"/>\n            <button onClick={show_flow}>Launch Flow</button>\n        </div>\n     )\n}\n\nexport default ContentTrigger;","import React from \"react\";\n\nconst print_event = () => {\n  window.Appcues.on(\"all\", function(e, a) {\n    const events_log = document.getElementById('events_log');\n    let event = document.createElement(\"li\");\n    event.innerHTML = e;\n    events_log.appendChild(event);\n    console.log(e);\n    console.log(a);\n\n  })\n}\n\nconst EventLog = () => {\n    print_event();\n    return (\n        <div>\n            <h2>See all events here</h2>\n            <ul id=\"events_log\">Flow events</ul>\n        </div>\n    )\n}\n\nexport default EventLog;","import React from \"react\";\n\nconst reset_appcues = () => {\n    window.Appcues.reset();\n}\n\nconst clear_show = () => {\n    window.Appcues.clearShow();\n}\n\nconst anonymous_user = () => {\n    window.Appcues.anonymous();\n}\n\nconst Toolbar = () => {\n\n    return (\n        <div>\n            \n            <button onClick={clear_show}>CLick me to clear a recalled checklist</button>\n            <button onClick={anonymous_user}>Click me to create an anonymous user</button>\n            <button onClick={reset_appcues}>Click me to reset this Appcues session</button>\n        </div>\n    )\n}\n\nexport default Toolbar;","import React from \"react\";\nimport ContentTrigger from \"./appcues_components/ContentTrigger\";\nimport EventLog from \"./appcues_components/EventLog\";\nimport Toolbar from \"./appcues_components/Toolbar\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to this feature-rich test application.</h1>\n      <p>Photo gallery</p>\n      <ContentTrigger/>\n      <EventLog/>\n\n      <Toolbar/>\n    </div>\n  );\n};\n\nexport default Home;\n\n\n","import React from \"react\";\nimport ContentTrigger from \"./appcues_components/ContentTrigger\";\nimport EventLog from \"./appcues_components/EventLog\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About Us</h1>\n      <p>We are a great company!</p>\n      <p>History of the company: humble beginnings</p>\n      <p>Staff profile</p>\n      <ul>Company Values\n        <li>1. be yourself</li>\n        <li>2. start company</li>\n        <li>3. ???</li>\n        <li>4. profit</li>\n      </ul>\n\n      <ContentTrigger/>\n      <EventLog/>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport ContentTrigger from \"./appcues_components/ContentTrigger\";\nimport EventLog from \"./appcues_components/EventLog\";\n\nconst Contact = () => {\n  return (\n    <div>\n      <h1>Contact Us</h1>\n      <p>\n        You can email us at{\" \"}\n        <a href=\"mailto:elijah@appcues.com\">elijah@appcues.com</a>\n      </p>\n      <ContentTrigger/>\n      <EventLog/>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => (\n  <div>\n    <div id=\"left_nav\">\n      <Link to=\"/basic_demo/\">Home</Link>\n      {\" - \"}\n      <Link to=\"/basic_demo/about\">About</Link>\n      {\" - \"}\n      <Link to=\"/basic_demo/contact\">Contact Us</Link>\n    </div>\n    <div id=\"right_nav\">\n      <Link to=\"/basic_demo/settings\">Settings</Link>\n      {\" - \"}\n      <Link to=\"/basic_demo/login\">Login</Link>\n    </div>\n  </div>\n);\n\nexport default Navigation;\n","import React from \"react\";\n\nconst identify_user = () => {\n  const user_id = document.getElementById('input_id_field');\n  window.Appcues.identify(user_id.value);\n  user_id.value = '';\n}\n\nconst AppcuesIdentifier = () => {\n\n    return (\n        <div>\n          <h2>Enter test user ID</h2>\n            <input id=\"input_id_field\" type=\"text\"/>\n            <button onClick={identify_user}>Log me in</button>\n        </div>\n    )\n}\n\nexport default AppcuesIdentifier;","import React from \"react\";\nimport ContentTrigger from \"./appcues_components/ContentTrigger\";\nimport EventLog from \"./appcues_components/EventLog\";\nimport AppcuesIdentifier from \"./appcues_components/Identifier\";\n\n\nconst Login = () => {\n  return (\n    <div>\n      <h1>Login your user here</h1>\n      <p>Login Info</p>\n      <AppcuesIdentifier/>\n      <ContentTrigger/>\n      <EventLog/>\n    </div>\n  );\n};\n\nexport default Login;","import React from \"react\";\nimport EventLog from \"./appcues_components/EventLog\";\nimport ContentTrigger from \"./appcues_components/ContentTrigger\";\n\nconst Settings = () => {\n  return (\n    <div>\n      <h1>Change your app's settings here</h1>\n      <p>Password</p>\n      <ContentTrigger />\n      <EventLog/>\n    </div>\n  );\n};\n\nexport default Settings;","import React, { useEffect } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport Navigation from \"./Navigation\";\nimport Login from \"./Login\";\nimport Settings from \"./Settings\";\n\nconst AppcuesRouter = () => {\n    const location = useLocation();\n\n    useEffect(() => {\n      window.Appcues.page();\n    }, [location]);\n\n\n  return (\n    <div>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/basic_demo/\" component={Home} />\n        <Route path=\"/basic_demo/about\" component={About} />\n        <Route path=\"/basic_demo/contact\" component={Contact} />\n        <Route path=\"/basic_demo/login\" component={Login} />\n        <Route path=\"/basic_demo/settings\" component={Settings} />\n      </Switch>\n      <div id=\"appcues_launchpad\"></div> \n    </div>\n  )\n};\n\nexport default AppcuesRouter;","import React from \"react\";\nimport { BrowserRouter} from \"react-router-dom\";\n\nimport AppcuesRouter from \"./Appcues\";\n\n\nconst App = () => {\n\n  window.Appcues.identify(\"testUser\", {\n    role: \"tester\",\n  })\n\n  return (\n    <BrowserRouter>\n      <AppcuesRouter />\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}